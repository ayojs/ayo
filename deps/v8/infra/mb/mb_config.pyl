# Copyright 2016 The V8 project authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

{
  # This is a map of buildbot master names -> buildbot builder names ->
  # config names (where each config name is a key in the 'configs' dict,
  # below). MB uses this dict to look up which config to use for a given bot.
  # Bots are ordered by appearance on waterfall.
  'masters': {
    'developer_default': {
      'android.arm.debug': 'default_debug_android_arm',
      'android.arm.optdebug': 'default_optdebug_android_arm',
      'android.arm.release': 'default_release_android_arm',
      'arm.debug': 'default_debug_arm',
      'arm.optdebug': 'default_optdebug_arm',
      'arm.release': 'default_release_arm',
      'arm64.debug': 'default_debug_arm64',
      'arm64.optdebug': 'default_optdebug_arm64',
      'arm64.release': 'default_release_arm64',
      'ia32.debug': 'default_debug_x86',
      'ia32.optdebug': 'default_optdebug_x86',
      'ia32.release': 'default_release_x86',
      'mipsel.debug': 'default_debug_mipsel',
      'mipsel.optdebug': 'default_optdebug_mipsel',
      'mipsel.release': 'default_release_mipsel',
      'mips64el.debug': 'default_debug_mips64el',
      'mips64el.optdebug': 'default_optdebug_mips64el',
      'mips64el.release': 'default_release_mips64el',
      'ppc.debug': 'default_debug_ppc',
      'ppc.optdebug': 'default_optdebug_ppc',
      'ppc.release': 'default_release_ppc',
      'ppc64.debug': 'default_debug_ppc64',
      'ppc64.optdebug': 'default_optdebug_ppc64',
      'ppc64.release': 'default_release_ppc64',
      's390.debug': 'default_debug_s390',
      's390.optdebug': 'default_optdebug_s390',
      's390.release': 'default_release_s390',
      's390x.debug': 'default_debug_s390x',
      's390x.optdebug': 'default_optdebug_s390x',
      's390x.release': 'default_release_s390x',
      'x64.debug': 'default_debug_x64',
      'x64.optdebug': 'default_optdebug_x64',
      'x64.release': 'default_release_x64',
    },

    'client.dart.fyi': {
      'v8-linux-release': 'gn_release_x86_disassembler',
      'v8-win-release': 'gn_release_x86_disassembler',
      'v8-mac-release': 'gn_release_x86_disassembler',
    },
    'client.dynamorio': {
      'linux-v8-dr': 'gn_release_x64',
    },
    'client.v8': {
      # Linux.
      'V8 Linux - builder': 'gn_release_x86_gcmole',
      'V8 Linux - debug builder': 'gn_debug_x86',
      'V8 Linux - nosnap builder': 'gn_release_x86_no_snap',
      'V8 Linux - nosnap debug builder': 'gn_debug_x86_no_snap',
      'V8 Linux - shared': 'gn_release_x86_shared_verify_heap',
      'V8 Linux - noi18n - debug': 'gn_debug_x86_no_i18n',
      'V8 Linux - verify csa': 'gn_release_x86_verify_csa',
      # Linux64.
      'V8 Linux64 - builder': 'gn_release_x64_valgrind',
      'V8 Linux64 - concurrent marking - builder': 'gn_release_x64_concurrent_marking',
      'V8 Linux64 - debug builder': 'gn_debug_x64_valgrind',
      'V8 Linux64 - custom snapshot - debug builder': 'gn_debug_x64_custom',
      'V8 Linux64 - internal snapshot': 'gn_release_x64_internal',
      'V8 Linux64 - gyp': 'gyp_release_x64',
      'V8 Linux64 - verify csa': 'gn_release_x64_verify_csa',
      # Windows.
      'V8 Win32 - builder': 'gn_release_x86_minimal_symbols',
      'V8 Win32 - debug builder': 'gn_debug_x86_minimal_symbols',
      'V8 Win32 - nosnap - shared':
        'gn_release_x86_no_snap_shared_minimal_symbols',
      'V8 Win64': 'gn_release_x64_minimal_symbols',
      'V8 Win64 - debug': 'gn_debug_x64_minimal_symbols',
      # TODO(machenbach): Switch plugins on when errors are fixed.
      'V8 Win64 - clang': 'gn_release_x64_clang',
      'V8 Win64 ASAN': 'gn_release_x64_asan_no_lsan',
      # Mac.
      'V8 Mac': 'gn_release_x86',
      'V8 Mac - debug': 'gn_debug_x86',
      'V8 Mac64': 'gn_release_x64',
      'V8 Mac64 - debug': 'gn_debug_x64',
      'V8 Mac GC Stress': 'gn_debug_x86',
      'V8 Mac64 ASAN': 'gn_release_x64_asan_no_lsan',
      # Sanitizers.
      'V8 Linux64 ASAN': 'gn_release_x64_asan',
      'V8 Linux64 TSAN': 'gn_release_x64_tsan',
      'V8 Linux64 TSAN - concurrent marking':
          'gn_release_x64_tsan_concurrent_marking',
      'V8 Linux - arm64 - sim - MSAN': 'gn_release_simulate_arm64_msan',
      # Misc.
      'V8 Linux gcc 4.8': 'gn_release_x86_gcc',
      'V8 Linux64 gcc 4.8 - debug': 'gn_debug_x64_gcc',
      # FYI.
      'V8 Linux - swarming staging': 'gn_release_x64',
      'V8 Linux64 - cfi': 'gn_release_x64_cfi',
      'V8 Linux64 UBSanVptr': 'gn_release_x64_ubsan_vptr',
      'V8 Linux - vtunejit': 'gn_debug_x86_vtunejit',
      'V8 Linux64 - gcov coverage': 'gn_release_x64_gcc_coverage',
      'V8 Linux - predictable': 'gn_release_x86_predictable',
      'V8 Linux - full debug': 'gn_full_debug_x86',
      'V8 Linux - interpreted regexp': 'gn_release_x86_interpreted_regexp',
      'V8 Random Deopt Fuzzer - debug': 'gn_debug_x86',
    },
    'client.v8.clusterfuzz': {
      'V8 Mac64 ASAN - release builder':
          'gn_release_x64_asan_no_lsan_edge_verify_heap',
      'V8 Mac64 ASAN - debug builder':
          'gn_debug_x64_asan_no_lsan_static_edge',
      'V8 Linux64 - release builder': 'gn_release_x64_correctness_fuzzer',
      'V8 Linux64 - debug builder': 'gn_debug_x64',
      'V8 Linux64 ASAN no inline - release builder':
          'gn_release_x64_asan_symbolized_edge_verify_heap',
      'V8 Linux64 ASAN - debug builder': 'gn_debug_x64_asan_edge',
      'V8 Linux64 ASAN arm64 - debug builder':
          'gn_debug_simulate_arm64_asan_edge',
      'V8 Linux ASAN arm - debug builder':
          'gn_debug_simulate_arm_asan_edge',
      'V8 Linux ASAN mipsel - debug builder':
          'gn_debug_simulate_mipsel_asan_edge',
      'V8 Linux64 CFI - release builder': 'gn_release_x64_cfi_clusterfuzz',
      'V8 Linux MSAN no origins':
          'gn_release_simulate_arm64_msan_no_origins_edge',
      'V8 Linux MSAN chained origins':
          'gn_release_simulate_arm64_msan_edge',
      'V8 Linux64 UBSan - release builder': 'gn_release_x64_ubsan_recover',
      'V8 Linux64 UBSanVptr - release builder':
          'gn_release_x64_ubsan_vptr_recover_edge',
    },
    'client.v8.ports': {
      # Arm.
      'V8 Arm - builder': 'gn_release_arm',
      'V8 Arm - debug builder': 'gn_debug_arm',
      'V8 Android Arm - builder': 'gn_release_android_arm',
      'V8 Linux - arm - sim': 'gn_release_simulate_arm',
      'V8 Linux - arm - sim - debug': 'gn_debug_simulate_arm',
      # Arm64.
      'V8 Android Arm64 - builder': 'gn_release_android_arm64',
      'V8 Linux - arm64 - sim': 'gn_release_simulate_arm64',
      'V8 Linux - arm64 - sim - debug': 'gn_debug_simulate_arm64',
      'V8 Linux - arm64 - sim - nosnap - debug':
          'gn_debug_simulate_arm64_no_snap',
      'V8 Linux - arm64 - sim - gc stress': 'gn_debug_simulate_arm64',
      # Mips.
      'V8 Mips - builder': 'gyp_release_mips_no_snap_no_i18n',
      'V8 Linux - mipsel - sim - builder': 'gn_release_simulate_mipsel',
      'V8 Linux - mips64el - sim - builder': 'gn_release_simulate_mips64el',
      # PPC.
      'V8 Linux - ppc - sim': 'gyp_release_simulate_ppc',
      'V8 Linux - ppc64 - sim': 'gyp_release_simulate_ppc64',
      # S390.
      'V8 Linux - s390 - sim': 'gyp_release_simulate_s390',
      'V8 Linux - s390x - sim': 'gyp_release_simulate_s390x',
    },
    'client.v8.branches': {
      'V8 Linux - beta branch': 'gn_release_x86',
      'V8 Linux - beta branch - debug': 'gn_debug_x86',
      'V8 Linux - stable branch': 'gn_release_x86',
      'V8 Linux - stable branch - debug': 'gn_debug_x86',
      'V8 Linux64 - beta branch': 'gn_release_x64',
      'V8 Linux64 - beta branch - debug': 'gn_debug_x64',
      'V8 Linux64 - stable branch': 'gn_release_x64',
      'V8 Linux64 - stable branch - debug': 'gn_debug_x64',
      'V8 arm - sim - beta branch': 'gn_release_simulate_arm',
      'V8 arm - sim - beta branch - debug': 'gn_debug_simulate_arm',
      'V8 arm - sim - stable branch': 'gn_release_simulate_arm',
      'V8 arm - sim - stable branch - debug': 'gn_debug_simulate_arm',
      'V8 mips64el - sim - beta branch': 'gn_release_simulate_mips64el',
      'V8 mips64el - sim - stable branch': 'gn_release_simulate_mips64el',
      'V8 mipsel - sim - beta branch': 'gn_release_simulate_mipsel',
      'V8 mipsel - sim - stable branch': 'gn_release_simulate_mipsel',
      'V8 ppc - sim - beta branch': 'gyp_release_simulate_ppc',
      'V8 ppc - sim - stable branch': 'gyp_release_simulate_ppc',
      'V8 ppc64 - sim - beta branch': 'gyp_release_simulate_ppc64',
      'V8 ppc64 - sim - stable branch': 'gyp_release_simulate_ppc64',
      'V8 s390 - sim - beta branch': 'gyp_release_simulate_s390',
      'V8 s390 - sim - stable branch': 'gyp_release_simulate_s390',
      'V8 s390x - sim - beta branch': 'gyp_release_simulate_s390x',
      'V8 s390x - sim - stable branch': 'gyp_release_simulate_s390x',
    },
    'tryserver.v8': {
      'v8_linux_rel_ng': 'gn_release_x86_gcmole_trybot',
      'v8_linux_verify_csa_rel_ng': 'gn_release_x86_verify_csa',
      'v8_linux_avx2_dbg': 'gn_debug_x86_trybot',
      'v8_linux_nodcheck_rel_ng': 'gn_release_x86_minimal_symbols',
      'v8_linux_dbg_ng': 'gn_debug_x86_trybot',
      'v8_linux_noi18n_rel_ng': 'gn_release_x86_no_i18n_trybot',
      'v8_linux_gc_stress_dbg': 'gn_debug_x86_trybot',
      'v8_linux_nosnap_rel': 'gn_release_x86_no_snap_trybot',
      'v8_linux_nosnap_dbg': 'gn_debug_x86_no_snap_trybot',
      'v8_linux_gcc_compile_rel': 'gn_release_x86_gcc_minimal_symbols',
      'v8_linux_gcc_rel': 'gn_release_x86_gcc_minimal_symbols',
      'v8_linux64_gcc_compile_dbg': 'gn_debug_x64_gcc',
      'v8_linux64_rel_ng': 'gn_release_x64_valgrind_trybot',
      'v8_linux64_verify_csa_rel_ng': 'gn_release_x64_verify_csa',
      'v8_linux64_gyp_rel_ng': 'gyp_release_x64',
      'v8_linux64_avx2_rel_ng': 'gn_release_x64_trybot',
      'v8_linux64_avx2_dbg': 'gn_debug_x64_trybot',
      'v8_linux64_asan_rel_ng': 'gn_release_x64_asan_minimal_symbols',
      'v8_linux64_msan_rel': 'gn_release_simulate_arm64_msan_minimal_symbols',
      'v8_linux64_sanitizer_coverage_rel':
          'gn_release_x64_asan_minimal_symbols_coverage',
      'v8_linux64_tsan_rel': 'gn_release_x64_tsan_minimal_symbols',
      'v8_linux64_tsan_concurrent_marking_rel_ng':
          'gn_release_x64_tsan_concurrent_marking_minimal_symbols',
      'v8_linux64_ubsan_rel_ng': 'gn_release_x64_ubsan_vptr_minimal_symbols',
      'v8_win_dbg': 'gn_debug_x86_trybot',
      'v8_win_compile_dbg': 'gn_debug_x86_trybot',
      'v8_win_rel_ng': 'gn_release_x86_trybot',
      'v8_win_nosnap_shared_rel_ng':
        'gn_release_x86_no_snap_shared_minimal_symbols',
      'v8_win64_asan_rel_ng': 'gn_release_x64_asan_no_lsan',
      'v8_win64_dbg': 'gn_debug_x64_minimal_symbols',
      'v8_win64_rel_ng': 'gn_release_x64_trybot',
      'v8_mac_rel_ng': 'gn_release_x86_trybot',
      'v8_mac_dbg': 'gn_debug_x86_trybot',
      'v8_mac_gc_stress_dbg': 'gn_debug_x86_trybot',
      'v8_mac64_rel': 'gn_release_x64_trybot',
      'v8_mac64_dbg': 'gn_debug_x64_minimal_symbols',
      'v8_mac64_asan_rel': 'gn_release_x64_asan_no_lsan',
      'v8_linux_arm_rel_ng': 'gn_release_simulate_arm_trybot',
      'v8_linux_arm_dbg': 'gn_debug_simulate_arm',
      'v8_linux_arm_armv8a_rel': 'gn_release_simulate_arm_trybot',
      'v8_linux_arm_armv8a_dbg': 'gn_debug_simulate_arm',
      'v8_linux_arm64_rel_ng': 'gn_release_simulate_arm64_trybot',
      'v8_linux_arm64_dbg': 'gn_debug_simulate_arm64',
      'v8_linux_arm64_gc_stress_dbg': 'gn_debug_simulate_arm64',
      'v8_linux_mipsel_compile_rel': 'gn_release_simulate_mipsel',
      'v8_linux_mips64el_compile_rel': 'gn_release_simulate_mips64el',
      'v8_android_arm_compile_rel': 'gn_release_android_arm',
    },
  },


  # To ease readability, config values are ordered by:
  # gyp/gn, release/debug, arch type, other values alphabetically.
  'configs': {
    # Developer default configs.
    'default_debug_arm': [
      'gn', 'debug', 'simulate_arm', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_arm': [
      'gn', 'debug', 'simulate_arm', 'v8_enable_slow_dchecks'],
    'default_release_arm': [
      'gn', 'release', 'simulate_arm'],
    'default_debug_android_arm': [
      'gn', 'debug', 'arm', 'android', 'crosscompile',
      'v8_enable_slow_dchecks', 'v8_full_debug'],
    'default_optdebug_android_arm': [
      'gn', 'debug', 'arm', 'android', 'crosscompile',
      'v8_enable_slow_dchecks' ],
    'default_release_android_arm': [
      'gn', 'release', 'arm', 'android', 'crosscompile'],
    'default_debug_arm64': [
      'gn', 'debug', 'simulate_arm64', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_arm64': [
      'gn', 'debug', 'simulate_arm64', 'v8_enable_slow_dchecks'],
    'default_release_arm64': [
      'gn', 'release', 'simulate_arm64'],
    'default_debug_mipsel': [
      'gn', 'debug', 'simulate_mipsel', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_mipsel': [
      'gn', 'debug', 'simulate_mipsel', 'v8_enable_slow_dchecks'],
    'default_release_mipsel': [
      'gn', 'release', 'simulate_mipsel'],
    'default_debug_mips64el': [
      'gn', 'debug', 'simulate_mips64el', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_mips64el': [
      'gn', 'debug', 'simulate_mips64el', 'v8_enable_slow_dchecks'],
    'default_release_mips64el': [
      'gn', 'release', 'simulate_mips64el'],
    'default_debug_ppc': [
      'gn', 'debug', 'simulate_ppc', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_ppc': [
      'gn', 'debug', 'simulate_ppc', 'v8_enable_slow_dchecks'],
    'default_release_ppc': [
      'gn', 'release', 'simulate_ppc'],
    'default_debug_ppc64': [
      'gn', 'debug', 'simulate_ppc64', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_ppc64': [
      'gn', 'debug', 'simulate_ppc64', 'v8_enable_slow_dchecks'],
    'default_release_ppc64': [
      'gn', 'release', 'simulate_ppc64'],
    'default_debug_s390': [
      'gn', 'debug', 'simulate_s390', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_s390': [
      'gn', 'debug', 'simulate_s390', 'v8_enable_slow_dchecks'],
    'default_release_s390': [
      'gn', 'release', 'simulate_s390'],
    'default_debug_s390x': [
      'gn', 'debug', 'simulate_s390x', 'v8_enable_slow_dchecks',
      'v8_full_debug'],
    'default_optdebug_s390x': [
      'gn', 'debug', 'simulate_s390x', 'v8_enable_slow_dchecks'],
    'default_release_s390x': [
      'gn', 'release', 'simulate_s390x'],
    'default_debug_x64': [
      'gn', 'debug', 'x64', 'v8_enable_slow_dchecks', 'v8_full_debug'],
    'default_optdebug_x64': [
      'gn', 'debug', 'x64', 'v8_enable_slow_dchecks'],
    'default_release_x64': [
      'gn', 'release', 'x64'],
    'default_debug_x86': [
      'gn', 'debug', 'x86', 'v8_enable_slow_dchecks', 'v8_full_debug'],
    'default_optdebug_x86': [
      'gn', 'debug', 'x86', 'v8_enable_slow_dchecks'],
    'default_release_x86': [
      'gn', 'release', 'x86'],


    # GN debug configs for simulators.
    'gn_debug_simulate_arm': [
      'gn', 'debug_bot', 'simulate_arm', 'swarming'],
    'gn_debug_simulate_arm_asan_edge': [
      'gn', 'debug_bot', 'simulate_arm', 'asan', 'edge'],
    'gn_debug_simulate_arm64': [
      'gn', 'debug_bot', 'simulate_arm64', 'swarming'],
    'gn_debug_simulate_arm64_asan_edge': [
      'gn', 'debug_bot', 'simulate_arm64', 'asan', 'lsan', 'edge'],
    'gn_debug_simulate_arm64_no_snap': [
      'gn', 'debug', 'simulate_arm64', 'shared', 'goma',
      'v8_optimized_debug', 'swarming', 'v8_snapshot_none'],
    'gn_debug_simulate_mipsel_asan_edge': [
      'gn', 'debug_bot', 'simulate_mipsel', 'asan', 'edge'],

    # GN release configs for simulators.
    'gn_release_simulate_arm': [
      'gn', 'release_bot', 'simulate_arm', 'swarming'],
    'gn_release_simulate_arm_trybot': [
      'gn', 'release_trybot', 'simulate_arm', 'swarming'],
    'gn_release_simulate_arm64': [
      'gn', 'release_bot', 'simulate_arm64', 'swarming'],
    'gn_release_simulate_arm64_msan': [
      'gn', 'release_bot', 'simulate_arm64', 'msan', 'swarming'],
    'gn_release_simulate_arm64_msan_minimal_symbols': [
      'gn', 'release_bot', 'simulate_arm64', 'msan', 'minimal_symbols',
      'swarming'],
    'gn_release_simulate_arm64_msan_edge': [
      'gn', 'release_bot', 'simulate_arm64', 'edge', 'msan'],
    'gn_release_simulate_arm64_msan_no_origins_edge': [
      'gn', 'release_bot', 'simulate_arm64', 'edge', 'msan_no_origins'],
    'gn_release_simulate_arm64_trybot': [
      'gn', 'release_trybot', 'simulate_arm64', 'swarming'],
    'gn_release_simulate_mipsel': [
      'gn', 'release_bot', 'simulate_mipsel', 'swarming'],
    'gn_release_simulate_mips64el': [
      'gn', 'release_bot', 'simulate_mips64el', 'swarming'],

    # GN debug configs for arm.
    'gn_debug_arm': [
      'gn', 'debug_bot', 'arm', 'crosscompile', 'hard_float', 'swarming',
      'no_custom_libcxx'],

    # GN release configs for arm.
    'gn_release_arm': [
      'gn', 'release_bot', 'arm', 'crosscompile', 'hard_float', 'swarming'],
    'gn_release_android_arm': [
      'gn', 'release_bot', 'arm', 'android', 'crosscompile',
      'minimal_symbols', 'swarming'],
    'gn_release_android_arm64': [
      'gn', 'release_bot', 'arm64', 'android', 'crosscompile',
      'minimal_symbols', 'swarming'],

    # GN release configs for x64.
    'gn_release_x64': [
      'gn', 'release_bot', 'x64', 'swarming'],
    'gn_release_x64_asan': [
      'gn', 'release_bot', 'x64', 'asan', 'lsan', 'swarming'],
    'gn_release_x64_asan_minimal_symbols': [
      'gn', 'release_bot', 'x64', 'asan', 'lsan', 'minimal_symbols',
      'swarming'],
    'gn_release_x64_asan_minimal_symbols_coverage': [
      'gn', 'release_bot', 'x64', 'asan', 'bb', 'coverage', 'lsan',
      'minimal_symbols', 'swarming'],
    'gn_release_x64_asan_no_lsan': [
      'gn', 'release_bot', 'x64', 'asan', 'swarming'],
    'gn_release_x64_asan_no_lsan_edge_verify_heap': [
      'gn', 'release_bot', 'x64', 'asan', 'edge', 'swarming',
      'v8_verify_heap'],
    'gn_release_x64_asan_symbolized_edge_verify_heap': [
      'gn', 'release_bot', 'x64', 'asan', 'edge', 'lsan', 'symbolized',
      'v8_verify_heap'],
    'gn_release_x64_cfi': [
      'gn', 'release_bot', 'x64', 'cfi', 'swarming'],
    'gn_release_x64_cfi_clusterfuzz': [
      'gn', 'release_bot', 'x64', 'cfi_clusterfuzz'],
    'gn_release_x64_clang': [
      'gn', 'release_bot', 'x64', 'clang', 'swarming'],
    'gn_release_x64_concurrent_marking': [
      'gn', 'release_bot', 'x64', 'v8_enable_concurrent_marking', 'swarming'],
    'gn_release_x64_correctness_fuzzer' : [
      'gn', 'release_bot', 'x64', 'v8_correctness_fuzzer'],
    'gn_release_x64_gcc_coverage': [
      'gn', 'release_bot', 'x64', 'coverage', 'gcc'],
    'gn_release_x64_internal': [
      'gn', 'release_bot', 'x64', 'swarming', 'v8_snapshot_internal'],
    'gn_release_x64_minimal_symbols': [
      'gn', 'release_bot', 'x64', 'minimal_symbols', 'swarming'],
    'gn_release_x64_trybot': [
      'gn', 'release_trybot', 'x64', 'swarming'],
    'gn_release_x64_tsan': [
      'gn', 'release_bot', 'x64', 'tsan', 'swarming'],
    'gn_release_x64_tsan_concurrent_marking': [
      'gn', 'release_bot', 'x64', 'v8_enable_concurrent_marking', 'tsan',
      'swarming'],
    'gn_release_x64_tsan_concurrent_marking_minimal_symbols': [
      'gn', 'release_bot', 'x64', 'v8_enable_concurrent_marking', 'tsan',
      'minimal_symbols', 'swarming'],
    'gn_release_x64_tsan_minimal_symbols': [
      'gn', 'release_bot', 'x64', 'tsan', 'minimal_symbols', 'swarming'],
    'gn_release_x64_ubsan_recover': [
      'gn', 'release_bot', 'x64', 'ubsan_recover', 'swarming'],
    'gn_release_x64_ubsan_vptr': [
      'gn', 'release_bot', 'x64', 'ubsan_vptr', 'swarming'],
    'gn_release_x64_ubsan_vptr_recover_edge': [
      'gn', 'release_bot', 'x64', 'edge', 'ubsan_vptr_recover', 'swarming'],
    'gn_release_x64_ubsan_vptr_minimal_symbols': [
      'gn', 'release_bot', 'x64', 'ubsan_vptr', 'minimal_symbols', 'swarming'],
    'gn_release_x64_valgrind': [
      'gn', 'release_bot', 'x64', 'swarming', 'valgrind',
      'no_custom_libcxx'],
    'gn_release_x64_valgrind_trybot': [
      'gn', 'release_trybot', 'x64', 'swarming', 'valgrind',
      'no_custom_libcxx'],
    'gn_release_x64_verify_csa': [
      'gn', 'release_bot', 'x64', 'swarming', 'dcheck_always_on',
      'v8_enable_slow_dchecks', 'v8_verify_csa'],

    # GN debug configs for x64.
    'gn_debug_x64': [
      'gn', 'debug_bot', 'x64', 'swarming'],
    'gn_debug_x64_asan_edge': [
      'gn', 'debug_bot', 'x64', 'asan', 'lsan', 'edge'],
    'gn_debug_x64_asan_no_lsan_static_edge': [
      'gn', 'debug', 'static', 'goma', 'v8_enable_slow_dchecks',
      'v8_optimized_debug', 'x64', 'asan', 'edge', 'swarming'],
    'gn_debug_x64_custom': [
      'gn', 'debug_bot', 'x64', 'swarming', 'v8_snapshot_custom'],
    'gn_debug_x64_gcc': [
      'gn', 'debug_bot', 'x64', 'gcc'],
    'gn_debug_x64_minimal_symbols': [
      'gn', 'debug_bot', 'x64', 'minimal_symbols', 'swarming'],
    'gn_debug_x64_trybot': [
      'gn', 'debug_trybot', 'x64', 'swarming'],
    'gn_debug_x64_valgrind': [
      'gn', 'debug_bot', 'x64', 'swarming', 'valgrind',
      'no_custom_libcxx'],

    # GN debug configs for x86.
    'gn_debug_x86': [
      'gn', 'debug_bot', 'x86', 'swarming'],
    'gn_debug_x86_minimal_symbols': [
      'gn', 'debug_bot', 'x86', 'minimal_symbols', 'swarming'],
    'gn_debug_x86_no_i18n': [
      'gn', 'debug_bot', 'x86', 'swarming', 'v8_no_i18n'],
    'gn_debug_x86_no_snap': [
      'gn', 'debug_bot', 'x86', 'swarming', 'v8_snapshot_none'],
    'gn_debug_x86_no_snap_trybot': [
      'gn', 'debug_trybot', 'x86', 'swarming', 'v8_snapshot_none'],
    'gn_debug_x86_trybot': [
      'gn', 'debug_trybot', 'x86', 'swarming'],
    'gn_debug_x86_vtunejit': [
      'gn', 'debug_bot', 'x86', 'v8_enable_vtunejit'],
    'gn_full_debug_x86': [
      'gn', 'debug', 'x86', 'goma', 'static', 'v8_enable_slow_dchecks',
      'v8_full_debug'],

    # GN release configs for x86.
    'gn_release_x86': [
      'gn', 'release_bot', 'x86', 'swarming'],
    'gn_release_x86_disassembler': [
      'gn', 'release_bot', 'x86', 'v8_enable_disassembler'],
    'gn_release_x86_gcc': [
      'gn', 'release_bot', 'x86', 'gcc'],
    'gn_release_x86_gcc_minimal_symbols': [
      'gn', 'release_bot', 'x86', 'gcc', 'minimal_symbols'],
    'gn_release_x86_gcmole': [
      'gn', 'release_bot', 'x86', 'gcmole', 'swarming'],
    'gn_release_x86_gcmole_trybot': [
      'gn', 'release_trybot', 'x86', 'gcmole', 'swarming'],
    'gn_release_x86_interpreted_regexp': [
      'gn', 'release_bot', 'x86', 'v8_interpreted_regexp'],
    'gn_release_x86_minimal_symbols': [
      'gn', 'release_bot', 'x86', 'minimal_symbols', 'swarming'],
    'gn_release_x86_no_i18n_trybot': [
      'gn', 'release_trybot', 'x86', 'swarming', 'v8_no_i18n'],
    'gn_release_x86_no_snap': [
      'gn', 'release_bot', 'x86', 'swarming', 'v8_snapshot_none'],
    'gn_release_x86_no_snap_shared_minimal_symbols': [
      'gn', 'release', 'x86', 'goma', 'minimal_symbols', 'shared', 'swarming',
      'v8_snapshot_none'],
    'gn_release_x86_no_snap_trybot': [
      'gn', 'release_trybot', 'x86', 'swarming', 'v8_snapshot_none'],
    'gn_release_x86_predictable': [
      'gn', 'release_bot', 'x86', 'v8_enable_verify_predictable'],
    'gn_release_x86_shared_verify_heap': [
      'gn', 'release', 'x86', 'goma', 'shared', 'swarming', 'v8_verify_heap'],
    'gn_release_x86_trybot': [
      'gn', 'release_trybot', 'x86', 'swarming'],
    'gn_release_x86_verify_csa': [
      'gn', 'release_bot', 'x86', 'swarming', 'dcheck_always_on',
      'v8_enable_slow_dchecks', 'v8_verify_csa'],

    # Gyp release configs for mips.
    'gyp_release_mips_no_snap_no_i18n': [
      'gyp', 'release', 'mips', 'crosscompile', 'static', 'v8_no_i18n',
      'v8_snapshot_none'],

    # Gyp release configs for simulators.
    'gyp_release_simulate_ppc': [
      'gyp', 'release_bot', 'simulate_ppc', 'swarming'],
    'gyp_release_simulate_ppc64': [
      'gyp', 'release_bot', 'simulate_ppc64', 'swarming'],
    'gyp_release_simulate_s390': [
      'gyp', 'release_bot', 'simulate_s390', 'swarming'],
    'gyp_release_simulate_s390x': [
      'gyp', 'release_bot', 'simulate_s390x', 'swarming'],

    # Gyp release configs for x64.
    'gyp_release_x64': [
      'gyp', 'release_bot', 'x64', 'swarming'],
  },

  'mixins': {
    'android': {
      'gn_args': 'target_os="android" v8_android_log_stdout=true',
      'gyp_defines': 'OS=android v8_android_log_stdout=1',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
      'gyp_defines': 'target_arch=arm',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
      'gyp_defines': 'target_arch=arm64',
    },

    'asan': {
      'gn_args': 'is_asan=true',
      'gyp_defines': 'clang=1 asan=1',
    },

    'bb': {
      'gn_args': 'sanitizer_coverage_flags="bb,trace-pc-guard"',
      'gyp_defines': 'sanitizer_coverage=bb,trace-pc-guard',
    },

    'cfi': {
      'gn_args': ('is_cfi=true use_cfi_cast=true use_cfi_diag=true '
                  'use_cfi_recover=false'),
      'gyp_defines': 'cfi_vptr=1 cfi_diag=1',
    },

    'cfi_clusterfuzz': {
      'gn_args': ('is_cfi=true use_cfi_cast=true use_cfi_diag=true '
                  'use_cfi_recover=true'),
      'gyp_defines': 'cfi_vptr=1 cfi_diag=1',
    },

    'clang': {
      'gn_args': 'is_clang=true',
      'gyp_defines': 'clang=1',
    },

    'coverage': {
      'gn_args': 'v8_code_coverage=true',
      'gyp_defines': 'coverage=1',
    },

    'crosscompile': {
      'gyp_crosscompile': True,
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
      'gyp_defines': 'dcheck_always_on=1',
    },

    'debug': {
      'gn_args': 'is_debug=true v8_enable_backtrace=true',
      'gyp_defines': 'v8_enable_backtrace=1',
    },

    'debug_bot': {
      'mixins': [
        'debug', 'shared', 'goma', 'v8_enable_slow_dchecks',
        'v8_optimized_debug'],
    },

    'debug_trybot': {
      'mixins': ['debug_bot', 'minimal_symbols'],
    },

    'edge': {
      'gn_args': 'sanitizer_coverage_flags="trace-pc-guard"',
      'gyp_defines': 'sanitizer_coverage=trace-pc-guard',
    },

    'gcc': {
      # TODO(machenbach): Remove cxx11 restriction when updating gcc version.
      'gn_args': 'is_clang=false use_cxx11=true',
      'gyp_defines': 'clang=0',
    },

    'gcmole': {
      'gn_args': 'v8_gcmole=true',
      'gyp_defines': 'gcmole=1',
    },

    'gn': {'type': 'gn'},

    'goma': {
      # The MB code will properly escape goma_dir if necessary in the GYP
      # code path; the GN code path needs no escaping.
      'gn_args': 'use_goma=true',
      'gyp_defines': 'use_goma=1',
    },

    'gyp': {'type': 'gyp'},

    'hard_float': {
      'gn_args': 'arm_float_abi="hard"',
      'gyp_defines': 'arm_float_abi=hard',
    },

    'lsan': {
      'gn_args': 'is_lsan=true',
      'gyp_defines': 'lsan=1',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1',
      'gyp_defines': 'fastbuild=1',
    },

    'mips': {
      'gn_args': 'target_cpu="mips"',
      'gyp_defines': 'target_arch=mips',
    },

    'msan': {
      'gn_args': ('is_msan=true msan_track_origins=2 '
                  'use_prebuilt_instrumented_libraries=true'),
    },

    'msan_no_origins': {
      'gn_args': ('is_msan=true msan_track_origins=0 '
                  'use_prebuilt_instrumented_libraries=true'),
    },

    # TODO(machenbach): Remove when http://crbug.com/738814 is resolved.
    'no_custom_libcxx': {
      'gn_args': 'use_custom_libcxx=false',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'static', 'goma'],
    },

    'release_trybot': {
      'mixins': ['release_bot', 'minimal_symbols', 'dcheck_always_on'],
    },

    'shared': {
      'gn_args': 'is_component_build=true',
      'gyp_defines': 'component=shared_library',
    },

    'simulate_arm': {
      'gn_args': 'target_cpu="x86" v8_target_cpu="arm"',
      'gyp_defines': 'target_arch=ia32 v8_target_arch=arm',
    },

    'simulate_arm64': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="arm64"',
      'gyp_defines': 'target_arch=x64 v8_target_arch=arm64',
    },

    'simulate_mipsel': {
      'gn_args':
          'target_cpu="x86" v8_target_cpu="mipsel" mips_arch_variant="r2"',
      'gyp_defines': 'target_arch=ia32 v8_target_arch=mipsel',
    },

    'simulate_mips64el': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="mips64el"',
      'gyp_defines': 'target_arch=x64 v8_target_arch=mips64el',
    },

    'simulate_ppc': {
      'gn_args': 'target_cpu="x86" v8_target_cpu="ppc"',
      'gyp_defines': 'target_arch=ia32 v8_target_arch=ppc',
    },

    'simulate_ppc64': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="ppc64"',
      'gyp_defines': 'target_arch=x64 v8_target_arch=ppc64',
    },

    'simulate_s390': {
      'gn_args': 'target_cpu="x86" v8_target_cpu="s390"',
      'gyp_defines': 'target_arch=ia32 v8_target_arch=s390',
    },

    'simulate_s390x': {
      'gn_args': 'target_cpu="x64" v8_target_cpu="s390x"',
      'gyp_defines': 'target_arch=x64 v8_target_arch=s390x',
    },

    'static': {
      'gn_args': 'is_component_build=false',
      'gyp_defines': 'component=static_library',
    },

    'swarming': {
      'gn_args': 'v8_test_isolation_mode="prepare"',
      'gyp_defines': 'test_isolation_mode=prepare',
    },

    # TODO(machenbach): Remove the symbolized config after the bots are gone.
    'symbolized': {
      'gn_args': 'v8_no_inline=true',
      'gyp_defines':
        'release_extra_cflags="-fno-inline-functions -fno-inline"',
    },

    'tsan': {
      'gn_args': 'is_tsan=true',
      'gyp_defines': 'clang=1 tsan=1',
    },

    'ubsan_recover': {
      # Ubsan with recovery.
      'gn_args': 'is_ubsan=true is_ubsan_no_recover=false',
    },

    'ubsan_vptr': {
      # TODO(krasin): Remove is_ubsan_no_recover=true when
      # https://llvm.org/bugs/show_bug.cgi?id=25569 is fixed and just use
      # ubsan_vptr instead.
      'gn_args': 'is_ubsan_vptr=true is_ubsan_no_recover=true',
    },

    'ubsan_vptr_recover': {
      # Ubsan vptr with recovery.
      'gn_args': 'is_ubsan_vptr=true is_ubsan_no_recover=false',
    },

    'valgrind': {
      'gn_args': 'v8_has_valgrind=true',
      'gyp_defines': 'has_valgrind=1',
    },

    'v8_no_i18n': {
      'gn_args': 'v8_enable_i18n_support=false icu_use_data_file=false',
      'gyp_defines': 'v8_enable_i18n_support=0 icu_use_data_file_flag=0',
    },

    'v8_enable_concurrent_marking': {
      'gn_args': 'v8_enable_concurrent_marking=true',
    },

    'v8_correctness_fuzzer': {
      'gn_args': 'v8_correctness_fuzzer=true v8_multi_arch_build=true',
    },

    'v8_enable_disassembler': {
      'gn_args': 'v8_enable_disassembler=true',
      'gyp_defines': 'v8_enable_disassembler=1',
    },

    'v8_enable_slow_dchecks': {
      'gn_args': 'v8_enable_slow_dchecks=true',
      'gyp_defines': 'v8_enable_slow_dchecks=1',
    },

    'v8_enable_verify_predictable': {
      'gn_args': 'v8_enable_verify_predictable=true',
      'gyp_defines': 'v8_enable_verify_predictable=1',
    },

    'v8_enable_vtunejit': {
      'gn_args': 'v8_enable_vtunejit=true',
      'gyp_defines': 'v8_enable_vtunejit=1',
    },

    'v8_full_debug': {
      'gn_args': 'v8_optimized_debug=false',
      'gyp_defines': 'v8_optimized_debug=0',
    },

    'v8_interpreted_regexp': {
      'gn_args': 'v8_interpreted_regexp=true',
      'gyp_defines': 'v8_interpreted_regexp=1',
    },

    'v8_optimized_debug': {
      # This is the default in gn for debug.
      'gyp_defines': 'v8_optimized_debug=1',
    },

    'v8_snapshot_custom': {
      # GN path is relative to project root.
      'gn_args': 'v8_embed_script="test/mjsunit/mjsunit.js"',

      # Gyp path is relative to src/v8.gyp.
      'gyp_defines': 'embed_script=../test/mjsunit/mjsunit.js',
    },

    'v8_snapshot_internal': {
      'gn_args': 'v8_use_external_startup_data=false',
      'gyp_defines': 'v8_use_external_startup_data=0',
    },

    'v8_snapshot_none': {
      'gn_args': 'v8_use_snapshot=false',
      'gyp_defines': 'v8_use_snapshot=false',
    },

    'v8_verify_heap': {
      'gn_args': 'v8_enable_verify_heap=true',
      'gyp_defines': 'v8_enable_verify_heap=1',
    },

    'v8_verify_csa': {
      'gn_args': 'v8_enable_verify_csa=true',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
      'gyp_defines': 'target_arch=x64',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
      'gyp_defines': 'target_arch=ia32',
    },
  },
}
